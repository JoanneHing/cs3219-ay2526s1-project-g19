# Generated by Django 5.2.6 on 2025-09-29 14:08

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "question_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("title", models.TextField()),
                ("statement_md", models.TextField()),
                ("assets", models.JSONField(default=list)),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "easy"),
                            ("medium", "medium"),
                            ("hard", "hard"),
                        ],
                        max_length=10,
                    ),
                ),
                ("topics", models.JSONField(default=list)),
                ("company_tags", models.JSONField(default=list)),
                ("is_active", models.BooleanField(default=True)),
                ("created_by", models.UUIDField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "search_tsv",
                    django.contrib.postgres.search.SearchVectorField(
                        blank=True, null=True
                    ),
                ),
            ],
            options={
                "db_table": "questions",
            },
        ),
        migrations.CreateModel(
            name="QuestionSolution",
            fields=[
                (
                    "solution_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("language", models.TextField()),
                ("solution_md", models.TextField()),
                ("author", models.UUIDField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "question_solutions",
            },
        ),
        migrations.CreateModel(
            name="QuestionScore",
            fields=[
                (
                    "question",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="score",
                        serialize=False,
                        to="question_service.question",
                    ),
                ),
                ("attainable_score", models.IntegerField()),
                ("model_version", models.TextField()),
                ("computed_at", models.DateTimeField()),
            ],
            options={
                "db_table": "question_scores",
            },
        ),
        migrations.CreateModel(
            name="QuestionStats",
            fields=[
                (
                    "question",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="stats",
                        serialize=False,
                        to="question_service.question",
                    ),
                ),
                ("views", models.BigIntegerField(default=0)),
                ("attempts", models.BigIntegerField(default=0)),
                ("solved", models.BigIntegerField(default=0)),
                ("last_activity_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "question_stats",
            },
        ),
        migrations.AddIndex(
            model_name="question",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_tsv"], name="questions_search__d76f16_gin"
            ),
        ),
        migrations.AddField(
            model_name="questionsolution",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="solutions",
                to="question_service.question",
            ),
        ),
        migrations.AddConstraint(
            model_name="questionsolution",
            constraint=models.UniqueConstraint(
                fields=("question", "language"), name="uq_question_language"
            ),
        ),
    ]
