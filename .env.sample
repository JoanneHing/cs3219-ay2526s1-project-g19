# =============================================================================
# PeerPrep Microservices Environment Configuration - DEVELOPMENT
# =============================================================================
# Copy this file to .env and customize for your local development environment
# This file is safe to commit (no secrets)
# =============================================================================

# -----------------------------------------------------------------------------
# Environment Type
# -----------------------------------------------------------------------------
ENVIRONMENT=development

# -----------------------------------------------------------------------------
# Service Ports (Development)
# -----------------------------------------------------------------------------
FRONTEND_PORT=5173
QUESTION_SERVICE_PORT=8001
MATCHING_SERVICE_PORT=8002
HISTORY_SERVICE_PORT=8003
USER_SERVICE_PORT=8004
COLLABORATION_SERVICE_PORT=8005
CHAT_SERVICE_PORT=8006

# -----------------------------------------------------------------------------
# Redis Configuration (Development - Internal Docker)
# -----------------------------------------------------------------------------
MATCHING_REDIS_HOST=matching_redis
MATCHING_REDIS_PORT=6379
COLLABORATION_REDIS_HOST=collaboration_redis
COLLABORATION_REDIS_PORT=6379
CHAT_REDIS_HOST=chat_redis
CHAT_REDIS_PORT=6379

# Redis URLs for Services (Development)
MATCHING_REDIS_URL=redis://matching_redis:6379/0
COLLABORATION_REDIS_URL=redis://collaboration_redis:6379/0
CHAT_REDIS_URL=redis://chat_redis:6379/0

# -----------------------------------------------------------------------------
# Database Configuration (Development - Internal Docker)
# -----------------------------------------------------------------------------
QUESTION_DB_HOST=question_db
QUESTION_DB_PORT=5432
QUESTION_DB_NAME=question_db
QUESTION_DB_USER=peerprep
QUESTION_DB_PASSWORD=peerprep_dev_password

MATCHING_DB_HOST=matching_db
MATCHING_DB_PORT=5432
MATCHING_DB_NAME=matching_db
MATCHING_DB_USER=peerprep
MATCHING_DB_PASSWORD=peerprep_dev_password

HISTORY_DB_HOST=history_db
HISTORY_DB_PORT=5432
HISTORY_DB_NAME=history_db
HISTORY_DB_USER=peerprep
HISTORY_DB_PASSWORD=peerprep_dev_password

USER_DB_HOST=user_db
USER_DB_PORT=5432
USER_DB_NAME=user_db
USER_DB_USER=peerprep
USER_DB_PASSWORD=peerprep_dev_password

# Database URLs (Development)
QUESTION_DATABASE_URL=postgresql://peerprep:peerprep_dev_password@question_db:5432/question_db
MATCHING_DATABASE_URL=postgresql://peerprep:peerprep_dev_password@matching_db:5432/matching_db
HISTORY_DATABASE_URL=postgresql://peerprep:peerprep_dev_password@history_db:5432/history_db
USER_DATABASE_URL=postgresql://peerprep:peerprep_dev_password@user_db:5432/user_db

# -----------------------------------------------------------------------------
# Django Configuration (Development)
# -----------------------------------------------------------------------------
DEBUG=true
SECRET_KEY=dev-secret-key-change-in-production
ALLOWED_HOSTS=localhost,127.0.0.1,question-service,history-service,user-service

# -----------------------------------------------------------------------------
# Service-to-Service Communication (Backend Internal URLs)
# -----------------------------------------------------------------------------
# These URLs are used when backend services need to call each other
# In Docker: use service names with port 8000 (Docker DNS resolution)
USER_SERVICE_URL=http://user-service:8000
QUESTION_SERVICE_URL=http://question-service:8000
MATCHING_SERVICE_URL=http://matching-service:8000
HISTORY_SERVICE_URL=http://history-service:8000
COLLABORATION_SERVICE_URL=http://collaboration-service:8000
CHAT_SERVICE_URL=http://chat-service:8000

# -----------------------------------------------------------------------------
# Frontend Environment Variables (Development & Production)
# -----------------------------------------------------------------------------
# Browser accesses ALL APIs through Nginx proxy paths (no direct service access)
# This works in both local Docker and production ECS
NODE_ENV=development

# Use proxy paths - nginx will route to backend services
# Development: http://localhost/user-service-api → user-service:8000
# Production: https://peerprep.com/user-service-api → user-service.peerprep-prod.internal:8000
VITE_QUESTION_SERVICE_URL=/question-service-api
VITE_MATCHING_SERVICE_URL=/matching-service-api
VITE_HISTORY_SERVICE_URL=/history-service-api
VITE_USER_SERVICE_URL=/user-service-api
VITE_COLLABORATION_SERVICE_URL=/collaboration-service-api
VITE_CHAT_SERVICE_URL=/chat-service-api

# -----------------------------------------------------------------------------
# Nginx Configuration (For production frontend)
# -----------------------------------------------------------------------------
# Service hosts for nginx proxy (without http://)
NGINX_USER_SERVICE_HOST=user-service
NGINX_QUESTION_SERVICE_HOST=question-service
NGINX_MATCHING_SERVICE_HOST=matching-service
NGINX_HISTORY_SERVICE_HOST=history-service
NGINX_COLLABORATION_SERVICE_HOST=collaboration-service
NGINX_CHAT_SERVICE_HOST=chat-service

# -----------------------------------------------------------------------------
# Frontend Build Configuration (Optional)
# -----------------------------------------------------------------------------
# FRONTEND_BUILD_STAGE=production  # development | production (defaults to production)
# FRONTEND_INTERNAL_PORT=80        # Port nginx listens on inside container

# -----------------------------------------------------------------------------
# Kafka Configuration (Development)
# -----------------------------------------------------------------------------
# Schema Registry
SCHEMA_REGISTRY_URL=https://psrc-1ynge38.ap-southeast-1.aws.confluent.cloud
SCHEMA_REGISTRY_KEY=UHD74OMKWLLJUHLT
SCHEMA_REGISTRY_SECRET=cfltVfrPZbye0+1G4cI1VzwWGTWZ/WpQWTZPD8Puy1UTDxT8yeJ43P9T1Eg75tew
# Topics
TOPIC_MATCH_FOUND=match.found
TOPIC_QUESTION_CHOSEN=question.chosen
TOPIC_SESSION_CREATED=session.created
TOPIC_SESSION_END=session.end
# Cluster client
KAFKA_BOOTSTRAP_SERVERS=pkc-312o0.ap-southeast-1.aws.confluent.cloud:9092
SASL_USERNAME=7VKLF6UMIQTG6HZ2
SASL_PASSWORD=cfltfxiDg2Qz5G1deDKZlnQSbJ3E5OD5jBsaesS2NrCQXLfSvOxk60hGM0FxxxQw
